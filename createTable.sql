CREATE TABLE USER_TB(
        ACCOUNT_ID INT PRIMARY KEY NOT NULL,
BALANCE REAL NOT NULL
);


CREATE TABLE POSITION_TB(
        POSITION_ID SERIAL PRIMARY KEY NOT NULL,
SYMBOL VARCHAR(256) NOT NULL,
        ACCOUNT_ID INT REFERENCES USER_TB(ACCOUNT_ID) NOT NULL,
AMOUNT INT NOT NULL
);

CREATE TABLE OPEN_TB(
        OPEN_ID SERIAL PRIMARY KEY NOT NULL,
ACCOUNT_ID INT REFERENCES USER_TB(ACCOUNT_ID) NOT NULL,
        PRICE REAL NOT NULL,
AMOUNT INT NOT NULL,
        OPEN_TIME BIGINT NOT NULL,
SYMBOL VARCHAR(256) NOT NULL,
        TRAN_TYPE INT NOT NULL
);

CREATE TABLE EXECUTED_TB(
        EXECUTED_ID SERIAL PRIMARY KEY NOT NULL,
BUYER_ID INT REFERENCES USER_TB(ACCOUNT_ID) NOT NULL,
        SELLER_ID INT REFERENCES USER_TB(ACCOUNT_ID) NOT NULL,
        PRICE REAL NOT NULL,
AMOUNT INT NOT NULL,
        EXECUTED_TIME BIGINT NOT NULL,
SYMBOL VARCHAR(256) NOT NULL
);


CREATE TABLE CANCEL_TB(
        CANCEL_ID SERIAL PRIMARY KEY NOT NULL,
ACCOUNT_ID INT REFERENCES USER_TB(ACCOUNT_ID) NOT NULL,
        AMOUNT INT NOT NULL,
CANCEL_TIME BIGINT NOT NULL
);


CREATE TABLE TRANSACTION_TB(
        TRANSACTION_ID SERIAL PRIMARY KEY NOT NULL,
OPEN_ID INT REFERENCES OPEN_TB(OPEN_ID) ON DELETE SET NULL ON UPDATE CASCADE,
        EXECUTED_ID INT REFERENCES EXECUTED_TB(EXECUTED_ID) ON DELETE SET NULL ON UPDATE CASCADE,
CANCEL_ID INT REFERENCES CANCEL_TB(CANCEL_ID) ON DELETE SET NULL ON UPDATE CASCADE
);