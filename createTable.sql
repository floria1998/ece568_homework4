CREATE TABLE USER(
ACCOUNT_ID INT PRIMARY KEY NOT NULL,
BALANCE INT
);


CREATE TABLE POSITION(
POSITION_ID INT PRIMARY KEY NOT NULL,
SYMBOL VARCHAR(256),
ACCONT_ID INT,
FOREIGN KEY (ACCOUNT_ID) REFERENCES USER(ACCOUNT_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TRANSACTION(
TRANSACTION_ID INT PRIMARY KEY NOT NULL,
OPEN_ID INT,
EXECUTED_ID INT,
CANCEL_ID INT,
FOREIGN KEY (OPEN_ID) REFERENCES OPEN(OPEN_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (EXECUTED_ID) REFERENCES EXECUTED(EXECUTED_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (CANCEL_ID) REFERENCES CANCEL(CANCEL_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE OPEN(
OPEN_ID INT PRIMARY KEY NOT NULL,
ACCOUNT_ID INT,
PRICE REAL,
AMOUNT INT,
OPEN_TIME BITINT,
SYMBOL VARCHAR(256),
TYPE INT,
FOREIGN KEY (ACCOUNT_ID) REFERENCES USER(ACCOUNT_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE EXECUTED(
EXECUTED_ID INT PRIMARY KEY NOT NULL,
BUYER_ID INT,
SELLER_ID INT,
PRICE REAL,
AMOUNT INT,
EXECUTED_TIME BITINT,
SYMBOL VARCHAR(256),
FOREIGN KEY (BUYER_ID) REFERENCES USER(ACCOUNT_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (SELLER_ID) REFERENCES USER(ACCOUNT_ID) ON DELETE CASCADE ON UPDATE CASCADE

);

CREATE TABLE CANCEL(
CANCEL_ID INT PRIMARY KEY NOT NULL,
ACCOUNT_ID INT,
AMOUNT INT,
CANCEL_TIME BITINT,
FOREIGN KEY (ACCOUNT_ID) REFERENCES USER(ACCOUNT_ID) ON DELETE CASCADE ON UPDATE CASCADE
)
